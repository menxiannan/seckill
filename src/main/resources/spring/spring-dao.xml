<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!-- 配置整合mybatis 过程 -->
    <!-- 1: 配置数据库相关参数 properties的属性 ： ${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2： 数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- c3p0 连接池私有属性-->
        <!--默认20-->
        <property name="maxPoolSize" value="30"/>
        <!--默认3-->
        <property name="minPoolSize" value="10"/>
        <!--关闭Commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--最大连接数没有了，等待连接时间，0为无限等待-->
        <property name="checkoutTimeout" value="1000"/>
        <!--重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!-- 3：配置SQLSessionFactory 回话工厂   重要的配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 和 spring 整合配置-->
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件: mybatis-config.xml-->
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件 mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4： 配置扫描Dao接口包 动态实现dao接口，并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 给出需要扫描dao接口包 -->
        <property name="basePackage" value="org.seckill.dao"/>
        <!-- 注入 sqlSessionFactory
            使用sqlSessionFactoryBeanName  类似延迟加载，等dataSource 各个属性赋值后在加载-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

    </bean>

    <!--redisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>

